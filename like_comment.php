<?php
session_start();
/**
 * ??? ?????? ??????? ??????????
 */

// ????? ??????? ????????
require_once 'includes/config.php';
require_once 'includes/connection.php';
require_once 'includes/functions.php';

// ?????? ?? ????? ??????
if (!isset($_SESSION['user_id'])) {
    echo json_encode([
        'success' => false,
        'message' => '??? ????? ?????? ??????? ????????'
    ]);
    exit();
}

// ?????? ?? ????? ???????
if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
    echo json_encode([
        'success' => false,
        'message' => '????? ??????? ??? ?????'
    ]);
    exit();
}

// ?????? ????????
$comment_id = filter_input(INPUT_POST, 'comment_id', FILTER_VALIDATE_INT);
$user_id = $_SESSION['user_id'];

// ?????? ?? ??? ????????
if (!$comment_id) {
    echo json_encode([
        'success' => false,
        'message' => '???? ??????? ??? ????'
    ]);
    exit();
}

// ?????? ???????
try {
    // ?????? ?? ???? ???????
    $stmt = $pdo->prepare("SELECT id, likes_count FROM comments WHERE id = ?");
    $stmt->execute([$comment_id]);
    $comment = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if (!$comment) {
        echo json_encode([
            'success' => false,
            'message' => '??????? ??? ?????'
        ]);
        exit();
    }
    
    // ????? ???? ??????? ????????? ??? ?? ??? ???????
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS `comment_likes` (
            `id` int(11) NOT NULL AUTO_INCREMENT,
            `comment_id` int(11) NOT NULL,
            `user_id` int(11) NOT NULL,
            `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
            PRIMARY KEY (`id`),
            UNIQUE KEY `comment_user` (`comment_id`,`user_id`),
            KEY `comment_id` (`comment_id`),
            KEY `user_id` (`user_id`)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
    ");
    
    // ?????? ??? ??? ??? ???????? ?? ???? ???????? ?? ???
    $stmt = $pdo->prepare("SELECT id FROM comment_likes WHERE comment_id = ? AND user_id = ?");
    $stmt->execute([$comment_id, $user_id]);
    $already_liked = $stmt->rowCount() > 0;
    
    // ??? ????????
    $pdo->beginTransaction();
    
    if ($already_liked) {
        // ????? ???????
        $stmt = $pdo->prepare("DELETE FROM comment_likes WHERE comment_id = ? AND user_id = ?");
        $stmt->execute([$comment_id, $user_id]);
        
        // ????? ??? ?????????
        $likes_count = max(0, ($comment['likes_count'] ?? 0) - 1);
        $stmt = $pdo->prepare("UPDATE comments SET likes_count = ? WHERE id = ?");
        $stmt->execute([$likes_count, $comment_id]);
    } else {
        // ????? ????? ????
        $stmt = $pdo->prepare("INSERT INTO comment_likes (comment_id, user_id) VALUES (?, ?)");
        $stmt->execute([$comment_id, $user_id]);
        
        // ????? ??? ?????????
        $likes_count = ($comment['likes_count'] ?? 0) + 1;
        $stmt = $pdo->prepare("UPDATE comments SET likes_count = ? WHERE id = ?");
        $stmt->execute([$likes_count, $comment_id]);
    }
    
    // ????? ????????
    $pdo->commit();
    
    // ?????? ??? ????? ?????? ?????????
    $stmt = $pdo->prepare("SELECT likes_count FROM comments WHERE id = ?");
    $stmt->execute([$comment_id]);
    $updated_comment = $stmt->fetch(PDO::FETCH_ASSOC);
    $current_likes = $updated_comment['likes_count'] ?? 0;
    
    echo json_encode([
        'success' => true,
        'action' => $already_liked ? 'unliked' : 'liked',
        'likes_count' => $current_likes
    ]);
    
} catch (PDOException $e) {
    // ??????? ?? ???????? ?? ???? ???? ???
    if ($pdo->inTransaction()) {
        $pdo->rollBack();
    }
    
    error_log('Error handling comment like: ' . $e->getMessage());
    
    echo json_encode([
        'success' => false,
        'message' => '??? ??? ????? ?????? ???????: ' . $e->getMessage()
    ]);
}
?>
